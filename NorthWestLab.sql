/*****************************************************************
  File:        SQLServerCreateNorthWestLab.sql
  Description: Used for customer support and automatization of NorthWest 
			   business processes. 
			   
  Created:     November 29, 2016 RBH
  Modified:    November 29, 2016 RBH
  Version:     1.0
******************************************************************/
--CREATE DATABASE NORTHWEST;


USE NORTHWEST;

/*
DROP TABLE CUSTOMER;
DROP TABLE WORK_ORDER;
DROP TABLE COMPOUNDS;
DROP TABLE INVOICE;
DROP TABLE PAYMENT;	
DROP TABLE PAYMENT_METHOD
DROP TABLE EMPLOYEE;
DROP TABLE COMPOUND_RECEIPT;
DROP TABLE WORK_ORDER_SCHEDULE;
DROP TABLE CATALOG;

DROP TABLE COMPOUNDS_ASSAYS;

DROP TABLE ASSAY;
DROP TABLE ASSAY_DESCRIPTION;
DROP TABLE TEST;
DROP TABLE TEST_SCHEDULE;
DROP TABLE TEST_RESULTS;
DROP TABLE TEST_MATERIALS_USED;
DROP TABLE MATERIALS;
DROP TABLE TEST_MATERIALS;
DROP TABLE TEST_DESCRIPTION;
*/


CREATE TABLE CUSTOMER 
(CUSTOMER_ID NUMERIC(8,0) PRIMARY KEY NOT NULL
, FIRST_NAME VARCHAR(25)
, LAST_NAME VARCHAR (25)
, STATE VARCHAR (15)
, CITY VARCHAR (20)
, STREET_ADDRESS VARCHAR (50)
, ZIP VARCHAR(5)
, PHONE VARCHAR(30)
, EMAIL VARCHAR (30)
) 



CREATE TABLE WORK_ORDER (WORK_ORDER_ID NUMERIC(8,0) PRIMARY KEY NOT NULL
, ORDER_DATE DATE
, QUOTED_PRICE VARCHAR (25)
, STATUS VARCHAR (25)
, CUSTOMER_ID NUMERIC(8,0)
, SCHEDULE_ID NUMERIC(8,0)
, COMMENTS VARCHAR (25)
)


CREATE TABLE COMPOUNDS (LT_NUMBER NUMERIC(8,0) NOT NULL
, COMPOUND_SEQUENCE_CODE NUMERIC(8,0) NOT NULL --composite key
, NAME VARCHAR (25)
, QUANTITY VARCHAR (10)
, CLIENT_WEIGHT VARCHAR (10)
, APPEARANCE VARCHAR (50)
, MOLECULAR_MASS VARCHAR(5)
, WORK_ORDER_ID NUMERIC(8,0) --Foreign Key
, ASSAY_ID NUMERIC(8,0) -- Foreign key
, MAXIMUM_TOLERANCE_DOSE VARCHAR(25)
) 

--Creating composite key
ALTER TABLE COMPOUNDS
    ADD CONSTRAINT pk_compounds PRIMARY KEY (LT_NUMBER,COMPOUND_SEQUENCE_CODE)

CREATE TABLE INVOICE (INVOICE_ID NUMERIC(8,0) PRIMARY KEY NOT NULL
, WORK_ORDER_ID NUMERIC(8,0) NOT NULL --foreign key
, PAYMENT_AMOUNT MONEY
, DATE_PAYMENT_DUE DATE
, EARLY_PAYMENT_DATE DATE
, EARLY_PAYMENT_DISCOUNT MONEY
, QUANTITY_DISCOUNT MONEY
, SENT_DATE DATE
) 


CREATE TABLE PAYMENT (PAYMENT_ID NUMERIC(8,0) PRIMARY KEY NOT NULL
, INVOICE_ID NUMERIC(8,0) NOT NULL -- foreign key
, AMOUNT_PAID MONEY 
, PAYMENT_RECEIPT_DATE DATE
, CURRENT_BALANCE MONEY
) 

 CREATE TABLE PAYMENT_METHOD(PAYMENT_METHOD_ID NUMERIC(8,0) PRIMARY KEY NOT NULL
 , CARD_NUMBER VARCHAR(25)
 , EXPIRATION_DATE DATE
 , SECURITY_CODE VARCHAR(4)
 , PAYMENT_ID NUMERIC(8,0) --FOREIGN KEY 
 )  

CREATE TABLE EMPLOYEE(EMPLOYEE_ID NUMERIC(8,0) PRIMARY KEY NOT NULL
, FIRST_NAME VARCHAR(25)
, LAST_NAME VARCHAR (25)
, ADDRESS VARCHAR (25)
, EMAIL VARCHAR (30)
, PHONE VARCHAR (25)
, WAGE VARCHAR (25)
, POSITION VARCHAR (25)
) 


 CREATE TABLE COMPOUND_RECEIPT (RECEIPT_ID NUMERIC (8,0) PRIMARY KEY NOT NULL 
 , LT_NUMBER NUMERIC (8,0) NOT NULL
 , COMPOUND_SEQUENCE_CODE NUMERIC (8,0) NOT NULL
 , RECEIVED_DATE DATE
 , RECEIVED_BY NUMERIC(8,0) NOT NULL
 , DATEDUE DATE
 , ACTUAL_WEIGHT VARCHAR(15)
 )  



CREATE TABLE WORK_ORDER_SCHEDULE (SCHEDULE_ID NUMERIC(8,0) PRIMARY KEY NOT NULL
, SCHEDULE_DATE DATE
, SCHEDULE_TIME TIME
, WORK_ORDER_ID NUMERIC (8,0) --FOREIGN KEY 
)  

/*
CREATE TABLE WORK_ORDER_SCHEDULE (SCHEDULE_ID NUMERIC(8,0) PRIMARY KEY NOT NULL
, SCHEDULE_DATE DATE
, SCHEDULE_TIME TIME
, WORK_ORDER_ID NUMERIC (8,0) --FOREIGN KEY 
)  */


CREATE TABLE CATALOG (CATALOG_ID NUMERIC(8,0) PRIMARY KEY NOT NULL
, CREATED_BY VARCHAR(25)
, CREATION_DATE VARCHAR(25)
) 

 CREATE TABLE COMPOUNDS_ASSAYS (LT_NUMBER_ID NUMERIC (8,0) NOT NULL
 , COMPOUND_SEQUENCE_CODE NUMERIC (8,0) NOT NULL
 , ASSAY_ID NUMERIC (8,0) NOT NULL
 ) 

 --Adding composite keys 
 ALTER TABLE COMPOUNDS_ASSAYS 
	ADD CONSTRAINT pk_compounds_assay PRIMARY KEY(LT_NUMBER_ID, COMPOUND_SEQUENCE_CODE,ASSAY_ID)

 

  CREATE TABLE ASSAY (ASSAY_ID NUMERIC (8,0) PRIMARY KEY NOT NULL
 , ASSAY_NAME VARCHAR (25) 
 , TYPE VARCHAR (25) 
 , DESCRIPTION VARCHAR (25) 
 , TIME_FRAME VARCHAR (50)
 , TOTAL_ASSAY_COST MONEY -- FOREIGN KEY
 ) 



 CREATE TABLE ASSAY_DESCRIPTION (ASSAY_NAME VARCHAR(25) PRIMARY KEY NOT NULL
 , ASSAY_DESCRIPTION VARCHAR (200)
 , CATALOG_ID NUMERIC(8,0) --Foreign Key
 ) 


  CREATE TABLE TEST (TEST_ID NUMERIC (8,0) PRIMARY KEY NOT NULL
 , ASSAY_ID NUMERIC(8,0) -- FOREIGN KEY
 , REQUIRED VARCHAR (25) 
 , TEST_TUBE_NUMBER NUMERIC(8,0)
 , TEST_NAME VARCHAR(25) -- FOREIGN KEY
 , START_TIME TIME
 , END_TIME TIME
 , TEST_DATE DATE
 , EMPLOYEE_ID NUMERIC(8,0) -- FOREIGN KEY
 , TOTAL_TEST_COST MONEY
 ,  
 ) 

 CREATE TABLE TEST_SCHEDULE (TEST_SCHEDULE_ID NUMERIC (8,0) PRIMARY KEY NOT NULL
 , TEST_START_DATE DATE
 , END_DATE DATE  
 , TEST_ID NUMERIC(8,0) -- FOREIGN KEY
 ) 


 CREATE TABLE TEST_RESULTS 
 (TEST_RESULT_ID NUMERIC (8,0) PRIMARY KEY NOT NULL
 , [QUALITATIVE] [varbinary](max) NOT NULL
 , [QUANTITATIVE] [varbinary](max) NOT NULL
 , TEST_ID NUMERIC(8,0) -- FOREIGN KEY
 ) 


 CREATE TABLE TEST_MATERIALS_USED (MATERIAL_ID NUMERIC (8,0) PRIMARY KEY NOT NULL
 , QUANTITY VARCHAR (25) 
 , TEST_ID VARCHAR (25) -- FOREIGN KEY
 ) 


  CREATE TABLE MATERIALS (MATERIAL_ID NUMERIC (8,0) PRIMARY KEY NOT NULL
 , NAME VARCHAR(25)
 , COST MONEY
 , TYPE VARCHAR(25)
 ) 


 CREATE TABLE TEST_MATERIALS (MATERIAL_ID NUMERIC (8,0) NOT NULL
 , TEST_NAME VARCHAR(25) NOT NULL
 , QUANTITY VARCHAR(25)
 ) 

 --Creating composite key
ALTER TABLE TEST_MATERIALS
    ADD CONSTRAINT pk_materials PRIMARY KEY (MATERIAL_ID,TEST_NAME)


 CREATE TABLE TEST_DESCRIPTION (TEST_NAME VARCHAR (25) PRIMARY KEY NOT NULL
 , DESCRIPTION VARCHAR(25)
 , BASED_PRICE MONEY
 , NUMBER_OF_DAYS_TO_COMPLETE VARCHAR(15)
 ) 

 

 /****** ADD CONSTRAINTS

		 *********/

--ALTER TABLE WORK_ORDER DROP CONSTRAINT FK_CustomerID;
ALTER TABLE WORK_ORDER
	ADD CONSTRAINT FK_CustomerID FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID);


--ALTER TABLE WORK_ORDER DROP CONSTRAINT FK_ScheduleID;
ALTER TABLE WORK_ORDER
	ADD CONSTRAINT FK_ScheduleID FOREIGN KEY(SCHEDULE_ID) REFERENCES WORK_ORDER_SCHEDULE(SCHEDULE_ID);


--ALTER TABLE COMPOUNDS DROP CONSTRAINT FK_Work_Order_ID;
ALTER TABLE COMPOUNDS
	ADD CONSTRAINT FK_Work_Order_ID FOREIGN KEY(WORK_ORDER_ID) REFERENCES WORK_ORDER(WORK_ORDER_ID);

/*
--ALTER TABLE COMPOUNDS DROP CONSTRAINT FK_Assay_ID;
ALTER TABLE COMPOUNDS
	ADD CONSTRAINT FK_Assay_ID FOREIGN KEY(ASSAY_ID) REFERENCES COMPOUNDS_ASSAYS(ASSAY_ID);
	*/


--ALTER TABLE INVOICE DROP CONSTRAINT FK;
ALTER TABLE INVOICE
	ADD CONSTRAINT FK_INVOICE_ID FOREIGN KEY(WORK_ORDER_ID) REFERENCES WORK_ORDER(WORK_ORDER_ID);


--ALTER TABLE PAYMENT DROP CONSTRAINT FK_Payment_Inv_ID;
ALTER TABLE PAYMENT
	ADD CONSTRAINT FK_Payment_Inv_ID FOREIGN KEY(INVOICE_ID) REFERENCES INVOICE(INVOICE_ID)



--ALTER TABLE PAYMENT_METHOD DROP CONSTRAINT FK_Payment_Meth_Pay_ID;
ALTER TABLE PAYMENT_METHOD
	ADD CONSTRAINT FK_Payment_Meth_Pay_ID FOREIGN KEY(PAYMENT_ID) REFERENCES PAYMENT(PAYMENT_ID)


--ADD COMPOSITE KEY AS FOREIGN KEY
 ALTER TABLE COMPOUND_RECEIPT
	ADD CONSTRAINT FK_CR_LT_SEQ
	FOREIGN KEY(LT_NUMBER, COMPOUND_SEQUENCE_CODE) REFERENCES COMPOUNDS(LT_NUMBER, COMPOUND_SEQUENCE_CODE)

--ALTER TABLE COMPOUND_RECEIPT DROP CONSTRAINT FK_CR_Employee;
ALTER TABLE COMPOUND_RECEIPT
	ADD CONSTRAINT FK_CR_Employee FOREIGN KEY(RECEIVED_BY) REFERENCES EMPLOYEE(EMPLOYEE_ID)

	

--ALTER TABLE WORK_ORDER_SCHEDULE DROP CONSTRAINT FK_WOS_Employee;
ALTER TABLE WORK_ORDER_SCHEDULE
	ADD CONSTRAINT FK_WOS_Employee FOREIGN KEY(WORK_ORDER_ID) REFERENCES WORK_ORDER(WORK_ORDER_ID)


--ALTER TABLE ASSAY DROP CONSTRAINT FK_Assay_Name;
ALTER TABLE ASSAY
	ADD CONSTRAINT FK_Assay_Name FOREIGN KEY(ASSAY_NAME) REFERENCES ASSAY_DESCRIPTION(ASSAY_NAME)


--ALTER TABLE TEST DROP CONSTRAINT FK_Test_Name;
ALTER TABLE TEST
	ADD CONSTRAINT FK_Test_Name FOREIGN KEY(TEST_NAME) REFERENCES TEST_DESCRIPTION(TEST_NAME)

--ALTER TABLE TEST DROP CONSTRAINT FK_TEST_EMP;
ALTER TABLE TEST
	ADD CONSTRAINT FK_TEST_EMP FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)


--ALTER TABLE TEST DROP CONSTRAINT FK_Test_Assay;
ALTER TABLE TEST
	ADD CONSTRAINT FK_Test_Assay FOREIGN KEY(ASSAY_ID) REFERENCES ASSAY(ASSAY_ID)



--ALTER TABLE TEST_SCHEDULE DROP CONSTRAINT FK_Test_Id;
ALTER TABLE TEST_SCHEDULE
	ADD CONSTRAINT FK_Test_Id FOREIGN KEY(TEST_ID) REFERENCES TEST(TEST_ID)



--ALTER TABLE TEST_RESULTS DROP CONSTRAINT FK_Test_Result_Id;
ALTER TABLE TEST_RESULTS
	ADD CONSTRAINT FK_Test_Result_Id FOREIGN KEY(TEST_ID) REFERENCES TEST(TEST_ID)



/****** CREATING INDEXES


		 *********/


---- Creating Index 'RESULTS_FK_I'
CREATE INDEX RESULTS_FK_I ON TEST_RESULTS
 (TEST_RESULT_ID)


CREATE INDEX RESULTS_TEST_FK_I ON TEST_RESULTS
 (TEST_ID)
